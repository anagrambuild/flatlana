"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TweedleDeeV1 = void 0;
const flatbuffers = __importStar(require("flatbuffers"));
class TweedleDeeV1 {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsTweedleDeeV1(bb, obj) {
        return (obj || new TweedleDeeV1()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsTweedleDeeV1(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new TweedleDeeV1()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    theString(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    theInt() {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    }
    mutate_the_int(value) {
        const offset = this.bb.__offset(this.bb_pos, 6);
        if (offset === 0) {
            return false;
        }
        this.bb.writeInt32(this.bb_pos + offset, value);
        return true;
    }
    static startTweedleDeeV1(builder) {
        builder.startObject(2);
    }
    static addTheString(builder, theStringOffset) {
        builder.addFieldOffset(0, theStringOffset, 0);
    }
    static addTheInt(builder, theInt) {
        builder.addFieldInt32(1, theInt, 0);
    }
    static endTweedleDeeV1(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static finishTweedleDeeV1Buffer(builder, offset) {
        builder.finish(offset);
    }
    static finishSizePrefixedTweedleDeeV1Buffer(builder, offset) {
        builder.finish(offset, undefined, true);
    }
    static createTweedleDeeV1(builder, theStringOffset, theInt) {
        TweedleDeeV1.startTweedleDeeV1(builder);
        TweedleDeeV1.addTheString(builder, theStringOffset);
        TweedleDeeV1.addTheInt(builder, theInt);
        return TweedleDeeV1.endTweedleDeeV1(builder);
    }
}
exports.TweedleDeeV1 = TweedleDeeV1;
